// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid())
  name          String
  email         String          @unique
  password      String
  role          userRole        @default(Trainee)
  bookings      Booking[]
  createdAt     DateTime?       @default(now())
  updatedAt     DateTime?       @updatedAt
  ClassSchedule ClassSchedule[]
}

model ClassSchedule {
  id        String    @id @default(uuid())
  date      DateTime
  startTime DateTime
  endTime   DateTime
  trainer   User      @relation(fields: [trainerId], references: [id])
  trainerId String
  bookings  Booking[]
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model Booking {
  id              String        @id @default(uuid())
  classScheduleId String
  traineeId       String
  classSchedule   ClassSchedule @relation(fields: [classScheduleId], references: [id])
  trainee         User          @relation(fields: [traineeId], references: [id])
  createdAt       DateTime?     @default(now())
  updatedAt       DateTime?     @updatedAt

  @@unique([classScheduleId, traineeId]) // only one booking per trainee per classSchedule
}

enum userRole {
  Admin
  Trainer
  Trainee
}
